version: 2.1

_references:
  ruby_versions: &ruby_versions
    ruby-version:
      - "3.3.0"
      - "3.2.2"
      - "3.1.4"
      - "3.0.6"
  rails_versions: &rails_versions
    rails-version:
      - "~> 7.1.0"
      - "~> 7.0.0"
      - "~> 6.1.0"

orbs:
  ruby: circleci/ruby@2.1.0

jobs:
  test:
    parameters:
      ruby-version:
        type: string
      rails-version:
        type: string

    executor:
      name: ruby/default
      tag: <<parameters.ruby-version>>
    environment:
      RAILS_VERSION: <<parameters.rails-version>>
    steps:
      - checkout
      - ruby/install-deps:
          # Have to set this since there's no lockfile
          bundler-version: ">2"
          # Do not use deployment mode, because we don't have a lockfile
          path: "bundle"
          # Always install the latest versions available
          with-cache: false
      - ruby/rspec-test
  test-ruby-head:
    parameters:
      rails-version:
        type: string
    docker:
      - image: cimg/base:stable
    environment:
      RAILS_VERSION: <<parameters.rails-version>>
    steps:
      - checkout
      - ruby/install:
          # RVM wants Ruby 2 for some reason to install Ruby head.
          # But then it will use 2.7.8 by default in the future;
          # we must use `rvm use ruby-head` before every command that matters
          version: "2.7.8"
      - ruby/install:
          version: ruby-head
      - restore_cache:
          keys:
            - v1-{{ arch }}-ruby-head-bundler
      - run:
          name: Install Ruby dependencies
          command: |
            rvm use ruby-head
            ruby --version
            gem install bundler
            bundle config set path bundle
            bundle update
      - save_cache:
          key: v1-{{ arch }}-ruby-head-bundler
          paths:
            - ./bundle
      - run:
          name: RSpec tests
          command: |
            rvm use ruby-head
            ruby --version
            bundle exec rspec

workflows:
  test:
    jobs:
      - test:
          matrix:
            parameters:
              <<: *ruby_versions
              <<: *rails_versions
      - test-ruby-head:
          matrix:
            parameters:
              <<: *rails_versions
